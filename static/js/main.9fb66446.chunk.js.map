{"version":3,"sources":["images/3d-world-map-png-2.png","images/coronavirus.png","redux/country/country.js","redux/continent/continent.js","redux/continentName/continentName.js","compoenets/continentFilter.js","compoenets/continent.js","compoenets/renderContinent.js","compoenets/country.js","redux/configureStore.js","compoenets/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_COUNTRY_DATA","initialState","countryReducer","state","action","type","payload","FETCH_COVID_DATA","FETCH_CONTINENT_DATA","covidReducer","FETCH_HEADING","headingReducer","FilterByContinent","disptach","useDispatch","className","onChange","e","continent","heading","target","value","dispatch","a","fetch","covidGet","json","covidList","covidData","Object","values","map","country","All","countries","acase","confirmed","DisplayData","useSelector","headingData","src","image","alt","length","data","virusImg","to","onClick","countryValue","countryConfirm","twons","keys","forEach","key","newTwon","name","push","CovidDataRender","useEffect","CountryDislay","slice","reducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","NavBar","id","path","text","link","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb66446.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/3d-world-map-png-2.78e251ac.png\";","export default __webpack_public_path__ + \"static/media/coronavirus.2be7498c.png\";","const FETCH_COUNTRY_DATA = 'metric-webapp-capstone/country/FETCH_COUNTRY_DATA';\r\nconst initialState = [];\r\nexport const loadCountryData = (countryValue, countryConfirm) => async (dispatch) => {\r\n  const covidGet = await fetch(`https://covid-api.mmediagroup.fr/v1/cases/?country=${countryValue}`);\r\n  const covidList = await covidGet.json();\r\n  const twons = [countryValue, countryConfirm];\r\n  Object.keys(covidList).forEach((key) => {\r\n    if (key !== 'All') {\r\n      const newTwon = {\r\n        name: key,\r\n        confirmed: covidList[key].confirmed,\r\n      };\r\n      twons.push(newTwon);\r\n    }\r\n  });\r\n\r\n  dispatch({\r\n    type: FETCH_COUNTRY_DATA,\r\n    payload: twons,\r\n  });\r\n};\r\n\r\nconst countryReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COUNTRY_DATA:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default countryReducer;\r\n","const FETCH_COVID_DATA = 'metric-webapp-capstone/continent/FETCH_COVID_DATA';\r\nconst FETCH_CONTINENT_DATA = 'metric-webapp-capstone/continent/FETCH_CONTINENT_DATA';\r\nconst initialState = [];\r\n\r\nexport const loadAPIData = () => async (dispatch) => {\r\n  const covidGet = await fetch('https://covid-api.mmediagroup.fr/v1/cases/?continent=europe');\r\n  const covidList = await covidGet.json();\r\n  const covidData = Object.values(covidList).map((country) => country.All);\r\n  const countries = covidData.map((acase) => ({\r\n    confirmed: acase.confirmed,\r\n    country: acase.country,\r\n  }));\r\n  dispatch({\r\n    type: FETCH_COVID_DATA,\r\n    payload: countries,\r\n  });\r\n};\r\n\r\nexport const filterContinentData = (continent) => async (dispatch) => {\r\n  const covidGet = await fetch(`https://covid-api.mmediagroup.fr/v1/cases/?continent=${continent}`);\r\n  const covidList = await covidGet.json();\r\n\r\n  const covidData = Object.values(covidList).map((country) => country.All);\r\n  const countries = covidData.map((acase) => ({\r\n    confirmed: acase.confirmed,\r\n    country: acase.country,\r\n  }));\r\n  dispatch({\r\n    type: FETCH_CONTINENT_DATA,\r\n    payload: countries,\r\n  });\r\n};\r\n\r\nconst covidReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COVID_DATA:\r\n      return [...action.payload];\r\n    case FETCH_CONTINENT_DATA:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidReducer;\r\n","const FETCH_HEADING = 'metric-webapp-capstone/continentName/FETCH_HEADING';\r\nconst initialState = [];\r\nexport const SetHeading = (heading) => ({\r\n  type: FETCH_HEADING,\r\n  payload: heading,\r\n});\r\n\r\nconst headingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_HEADING:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default headingReducer;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContinentData } from '../redux/continent/continent';\r\nimport { SetHeading } from '../redux/continentName/continentName';\r\nimport '../stylesheets/filter.css';\r\n\r\nconst FilterByContinent = () => {\r\n  const disptach = useDispatch();\r\n  const continents = ['Africa', 'Europe', 'Asia', 'America'];\r\n  const filter = (e) => {\r\n    disptach(filterContinentData(e.target.value));\r\n    disptach(SetHeading(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"formDiv\">\r\n      <h2>Stats By Country</h2>\r\n      <form>\r\n        <select onChange={filter}>\r\n          <option>Search By Continent</option>\r\n          {continents.map((continent) => (\r\n            <option key={continent} value={continent}>\r\n              {continent}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterByContinent;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport '../stylesheets/display.css';\r\nimport { Link } from 'react-router-dom';\r\nimport image from '../images/3d-world-map-png-2.png';\r\nimport virusImg from '../images/coronavirus.png';\r\nimport { loadCountryData } from '../redux/country/country';\r\nimport FilterByContinent from './continentFilter';\r\n\r\nconst DisplayData = () => {\r\n  const disptach = useDispatch();\r\n  const covidData = useSelector((state) => state.covidReducer);\r\n  const headingData = useSelector((state) => state.headingReducer);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"HeadingDiv\">\r\n        <img src={image} alt=\"Europe\" />\r\n        <h1>\r\n          {headingData.length === 0 ? <p>Europe</p> : <p>{headingData}</p>}\r\n        </h1>\r\n      </div>\r\n      <div>\r\n        <FilterByContinent />\r\n        {covidData.length === 0 ? (\r\n          <p className=\"nodata\">There is no data of this continent</p>\r\n        ) : (\r\n          <ul className=\"covidList\">\r\n            {covidData.map((data) => (\r\n              <li\r\n                key={data.confirmed}\r\n                // onClick={() => disptach(loadCountryData(data.country, data.confirmed))}\r\n              >\r\n                <img src={virusImg} alt=\"Europe\" />\r\n                <Link to=\"/country\" className=\"link\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => disptach(loadCountryData(data.country, data.confirmed))}\r\n                  >\r\n                    <i className=\"fa fa-arrow-right\" />\r\n                  </button>\r\n                </Link>\r\n                <p key={data.country}>{data.country}</p>\r\n                <span>{data.confirmed}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n","import { React, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loadAPIData } from '../redux/continent/continent';\r\n\r\nconst CovidDataRender = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(loadAPIData());\r\n  }, []);\r\n  return <></>;\r\n};\r\n\r\nexport default CovidDataRender;\r\n","import { React } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport image from '../images/3d-world-map-png-2.png';\r\nimport '../stylesheets/country.css';\r\n\r\nconst CountryDislay = () => {\r\n  const covidData = useSelector((state) => state.countryReducer);\r\n  return (\r\n    <div className=\"countryData\">\r\n      <div className=\"countryHeader\">\r\n        <img src={image} alt=\"Europe\" />\r\n        <div className=\"heading\">\r\n          <h2>{covidData[0]}</h2>\r\n          <span>{covidData[1]}</span>\r\n        </div>\r\n      </div>\r\n      <h1 className=\"cityHeading\">CITY/ TOWN BREAKDOWN</h1>\r\n      {covidData.length === 2 ? (\r\n        <p className=\"conditional\">\r\n          There is no city/regions details for this country\r\n        </p>\r\n      ) : (\r\n        <ul className=\"countryDetail\">\r\n          {covidData.slice(2).map((data) => (\r\n            <li key={data.name}>\r\n              <p>{data.name}</p>\r\n              <div>\r\n                <span>\r\n                  {data.confirmed}\r\n                  cases\r\n                </span>\r\n                <i className=\"fa fa-arrow-circle-o-right\" />\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDislay;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport covidReducer from './continent/continent';\r\nimport countryReducer from './country/country';\r\nimport headingReducer from './continentName/continentName';\r\n\r\nconst reducer = combineReducers({\r\n  covidReducer,\r\n  countryReducer,\r\n  headingReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(logger, thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../stylesheets/navbar.css';\r\n\r\nconst NavBar = () => {\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: '/',\r\n      text: '<',\r\n    },\r\n  ];\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <ul>\r\n        {links.map((link) => (\r\n          <li key={link.id}>\r\n            <Link to={link.path} className=\"navLink\">\r\n              {link.text}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3>Covid-19 metrics</h3>\r\n      <div>\r\n        <i className=\"fa fa-microphone\" />\r\n        <i className=\"fa fa-gear\" />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { Provider } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport DisplayData from './compoenets/continent';\r\nimport CovidDataRender from './compoenets/renderContinent';\r\nimport CountryDislay from './compoenets/country';\r\nimport store from './redux/configureStore';\r\nimport NavBar from './compoenets/navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Switch>\r\n        <Provider store={store}>\r\n          <Route exact path=\"/\">\r\n            <CovidDataRender />\r\n            <DisplayData />\r\n          </Route>\r\n          <Route path=\"/country\">\r\n            <CountryDislay />\r\n          </Route>\r\n        </Provider>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS,\r\n      getFID,\r\n      getFCP,\r\n      getLCP,\r\n      getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}